<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Timesheet extends \App\Entity\Timesheet implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'begin', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'end', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'timezone', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'localized', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'duration', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'activity', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'project', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'rate', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'exported', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'tags', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'meta', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'fixedRate', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'hourlyRate'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'begin', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'end', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'timezone', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'localized', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'duration', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'activity', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'project', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'rate', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'exported', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'tags', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'meta', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'fixedRate', '' . "\0" . 'App\\Entity\\Timesheet' . "\0" . 'hourlyRate'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Timesheet $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getBegin(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBegin', []);

        return parent::getBegin();
    }

    /**
     * {@inheritDoc}
     */
    public function setBegin(\DateTime $begin): \App\Entity\Timesheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBegin', [$begin]);

        return parent::setBegin($begin);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnd(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnd', []);

        return parent::getEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnd(?\DateTime $end): \App\Entity\Timesheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnd', [$end]);

        return parent::setEnd($end);
    }

    /**
     * {@inheritDoc}
     */
    public function setDuration($duration): \App\Entity\Timesheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuration', [$duration]);

        return parent::setDuration($duration);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuration', []);

        return parent::getDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\App\Entity\User $user): \App\Entity\Timesheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivity($activity): \App\Entity\Timesheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivity', [$activity]);

        return parent::setActivity($activity);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivity(): ?\App\Entity\Activity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivity', []);

        return parent::getActivity();
    }

    /**
     * {@inheritDoc}
     */
    public function getProject(): ?\App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProject', []);

        return parent::getProject();
    }

    /**
     * {@inheritDoc}
     */
    public function setProject(\App\Entity\Project $project): \App\Entity\Timesheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProject', [$project]);

        return parent::setProject($project);
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description): \App\Entity\Timesheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setRate($rate): \App\Entity\Timesheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRate', [$rate]);

        return parent::setRate($rate);
    }

    /**
     * {@inheritDoc}
     */
    public function getRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRate', []);

        return parent::getRate();
    }

    /**
     * {@inheritDoc}
     */
    public function addTag(\App\Entity\Tag $tag): \App\Entity\Timesheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTag', [$tag]);

        return parent::addTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTag(\App\Entity\Tag $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTag', [$tag]);

        return parent::removeTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getTags(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', []);

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function getTagsAsArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTagsAsArray', []);

        return parent::getTagsAsArray();
    }

    /**
     * {@inheritDoc}
     */
    public function isExported(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExported', []);

        return parent::isExported();
    }

    /**
     * {@inheritDoc}
     */
    public function setExported(bool $exported): \App\Entity\Timesheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExported', [$exported]);

        return parent::setExported($exported);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimezone(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimezone', []);

        return parent::getTimezone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimezone(string $timezone): \App\Entity\Timesheet
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimezone', [$timezone]);

        return parent::setTimezone($timezone);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaFields(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaFields', []);

        return parent::getMetaFields();
    }

    /**
     * {@inheritDoc}
     */
    public function getVisibleMetaFields(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisibleMetaFields', []);

        return parent::getVisibleMetaFields();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaField(string $name): ?\App\Entity\MetaTableTypeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaField', [$name]);

        return parent::getMetaField($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaField(\App\Entity\MetaTableTypeInterface $meta): \App\Entity\EntityWithMetaFields
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaField', [$meta]);

        return parent::setMetaField($meta);
    }

    /**
     * {@inheritDoc}
     */
    public function getFixedRate(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFixedRate', []);

        return parent::getFixedRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setFixedRate(?float $fixedRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFixedRate', [$fixedRate]);

        return parent::setFixedRate($fixedRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getHourlyRate(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHourlyRate', []);

        return parent::getHourlyRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setHourlyRate(?float $hourlyRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHourlyRate', [$hourlyRate]);

        return parent::setHourlyRate($hourlyRate);
    }

}
