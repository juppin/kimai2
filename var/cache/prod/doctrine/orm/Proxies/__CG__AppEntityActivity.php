<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Activity extends \App\Entity\Activity implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'project', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'comment', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'visible', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'timesheets', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'meta', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'fixedRate', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'hourlyRate', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'color', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'budget', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'timeBudget'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'project', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'comment', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'visible', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'timesheets', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'meta', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'fixedRate', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'hourlyRate', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'color', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'budget', '' . "\0" . 'App\\Entity\\Activity' . "\0" . 'timeBudget'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Activity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTimesheets(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimesheets', []);

        return parent::getTimesheets();
    }

    /**
     * {@inheritDoc}
     */
    public function getProject(): ?\App\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProject', []);

        return parent::getProject();
    }

    /**
     * {@inheritDoc}
     */
    public function setProject(?\App\Entity\Project $project): \App\Entity\Activity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProject', [$project]);

        return parent::setProject($project);
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Activity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment(?string $comment): \App\Entity\Activity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', [$comment]);

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', []);

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisible(bool $visible): \App\Entity\Activity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisible', [$visible]);

        return parent::setVisible($visible);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisible(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisible', []);

        return parent::getVisible();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaFields(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaFields', []);

        return parent::getMetaFields();
    }

    /**
     * {@inheritDoc}
     */
    public function getVisibleMetaFields(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisibleMetaFields', []);

        return parent::getVisibleMetaFields();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaField(string $name): ?\App\Entity\MetaTableTypeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaField', [$name]);

        return parent::getMetaField($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaField(\App\Entity\MetaTableTypeInterface $meta): \App\Entity\EntityWithMetaFields
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaField', [$meta]);

        return parent::setMetaField($meta);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getFixedRate(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFixedRate', []);

        return parent::getFixedRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setFixedRate(?float $fixedRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFixedRate', [$fixedRate]);

        return parent::setFixedRate($fixedRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getHourlyRate(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHourlyRate', []);

        return parent::getHourlyRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setHourlyRate(?float $hourlyRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHourlyRate', [$hourlyRate]);

        return parent::setHourlyRate($hourlyRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getColor(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColor', []);

        return parent::getColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setColor(string $color = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setColor', [$color]);

        return parent::setColor($color);
    }

    /**
     * {@inheritDoc}
     */
    public function setBudget(?float $budget)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudget', [$budget]);

        return parent::setBudget($budget);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudget', []);

        return parent::getBudget();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimeBudget(?int $seconds)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimeBudget', [$seconds]);

        return parent::setTimeBudget($seconds);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeBudget(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeBudget', []);

        return parent::getTimeBudget();
    }

}
