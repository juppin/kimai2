<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'form.registry' shared service.

include_once $this->targetDirs[3].'/vendor/symfony/form/FormRegistryInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/FormRegistry.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/FormExtensionInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/Extension/DependencyInjection/DependencyInjectionExtension.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/ResolvedFormTypeFactoryInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/ResolvedFormTypeFactory.php';

return $this->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'App\\Form\\API\\ActivityApiEditForm' => ['privates', 'App\\Form\\API\\ActivityApiEditForm', 'getActivityApiEditFormService.php', true],
    'App\\Form\\API\\CustomerApiEditForm' => ['privates', 'App\\Form\\API\\CustomerApiEditForm', 'getCustomerApiEditFormService.php', true],
    'App\\Form\\API\\ProjectApiEditForm' => ['privates', 'App\\Form\\API\\ProjectApiEditForm', 'getProjectApiEditFormService.php', true],
    'App\\Form\\API\\TimesheetApiEditForm' => ['privates', 'App\\Form\\API\\TimesheetApiEditForm', 'getTimesheetApiEditFormService.php', true],
    'App\\Form\\ActivityEditForm' => ['privates', 'App\\Form\\ActivityEditForm', 'getActivityEditFormService.php', true],
    'App\\Form\\CustomerEditForm' => ['privates', 'App\\Form\\CustomerEditForm', 'getCustomerEditFormService.php', true],
    'App\\Form\\InvoiceTemplateForm' => ['privates', 'App\\Form\\InvoiceTemplateForm', 'getInvoiceTemplateFormService.php', true],
    'App\\Form\\ProjectEditForm' => ['privates', 'App\\Form\\ProjectEditForm', 'getProjectEditFormService.php', true],
    'App\\Form\\SystemConfigurationForm' => ['privates', 'App\\Form\\SystemConfigurationForm', 'getSystemConfigurationFormService.php', true],
    'App\\Form\\TimesheetAdminEditForm' => ['privates', 'App\\Form\\TimesheetAdminEditForm', 'getTimesheetAdminEditFormService.php', true],
    'App\\Form\\TimesheetEditForm' => ['privates', 'App\\Form\\TimesheetEditForm', 'getTimesheetEditFormService.php', true],
    'App\\Form\\Toolbar\\ActivityToolbarForm' => ['privates', 'App\\Form\\Toolbar\\ActivityToolbarForm', 'getActivityToolbarFormService.php', true],
    'App\\Form\\Toolbar\\CustomerToolbarForm' => ['privates', 'App\\Form\\Toolbar\\CustomerToolbarForm', 'getCustomerToolbarFormService.php', true],
    'App\\Form\\Toolbar\\ExportToolbarForm' => ['privates', 'App\\Form\\Toolbar\\ExportToolbarForm', 'getExportToolbarFormService.php', true],
    'App\\Form\\Toolbar\\InvoiceToolbarForm' => ['privates', 'App\\Form\\Toolbar\\InvoiceToolbarForm', 'getInvoiceToolbarFormService.php', true],
    'App\\Form\\Toolbar\\ProjectToolbarForm' => ['privates', 'App\\Form\\Toolbar\\ProjectToolbarForm', 'getProjectToolbarFormService.php', true],
    'App\\Form\\Toolbar\\TagToolbarForm' => ['privates', 'App\\Form\\Toolbar\\TagToolbarForm', 'getTagToolbarFormService.php', true],
    'App\\Form\\Toolbar\\TimesheetToolbarForm' => ['privates', 'App\\Form\\Toolbar\\TimesheetToolbarForm', 'getTimesheetToolbarFormService.php', true],
    'App\\Form\\Toolbar\\UserToolbarForm' => ['privates', 'App\\Form\\Toolbar\\UserToolbarForm', 'getUserToolbarFormService.php', true],
    'App\\Form\\Type\\ActivityType' => ['privates', 'App\\Form\\Type\\ActivityType', 'getActivityTypeService.php', true],
    'App\\Form\\Type\\CalendarViewType' => ['privates', 'App\\Form\\Type\\CalendarViewType', 'getCalendarViewTypeService.php', true],
    'App\\Form\\Type\\ColorPickerType' => ['privates', 'App\\Form\\Type\\ColorPickerType', 'getColorPickerTypeService.php', true],
    'App\\Form\\Type\\CustomerType' => ['privates', 'App\\Form\\Type\\CustomerType', 'getCustomerTypeService.php', true],
    'App\\Form\\Type\\DatePickerType' => ['privates', 'App\\Form\\Type\\DatePickerType', 'getDatePickerTypeService.php', true],
    'App\\Form\\Type\\DateRangeType' => ['privates', 'App\\Form\\Type\\DateRangeType', 'getDateRangeTypeService.php', true],
    'App\\Form\\Type\\DateTimePickerType' => ['privates', 'App\\Form\\Type\\DateTimePickerType', 'getDateTimePickerTypeService.php', true],
    'App\\Form\\Type\\DurationType' => ['privates', 'App\\Form\\Type\\DurationType', 'getDurationTypeService.php', true],
    'App\\Form\\Type\\EnhancedSelectboxType' => ['privates', 'App\\Form\\Type\\EnhancedSelectboxType', 'getEnhancedSelectboxTypeService.php', true],
    'App\\Form\\Type\\EntityMetaDefinitionType' => ['privates', 'App\\Form\\Type\\EntityMetaDefinitionType', 'getEntityMetaDefinitionTypeService.php', true],
    'App\\Form\\Type\\FixedRateType' => ['privates', 'App\\Form\\Type\\FixedRateType', 'getFixedRateTypeService.php', true],
    'App\\Form\\Type\\HourlyRateType' => ['privates', 'App\\Form\\Type\\HourlyRateType', 'getHourlyRateTypeService.php', true],
    'App\\Form\\Type\\InitialViewType' => ['privates', 'App\\Form\\Type\\InitialViewType', 'getInitialViewTypeService.php', true],
    'App\\Form\\Type\\InvoiceCalculatorType' => ['privates', 'App\\Form\\Type\\InvoiceCalculatorType', 'getInvoiceCalculatorTypeService.php', true],
    'App\\Form\\Type\\InvoiceNumberGeneratorType' => ['privates', 'App\\Form\\Type\\InvoiceNumberGeneratorType', 'getInvoiceNumberGeneratorTypeService.php', true],
    'App\\Form\\Type\\InvoiceRendererType' => ['privates', 'App\\Form\\Type\\InvoiceRendererType', 'getInvoiceRendererTypeService.php', true],
    'App\\Form\\Type\\InvoiceTemplateType' => ['privates', 'App\\Form\\Type\\InvoiceTemplateType', 'getInvoiceTemplateTypeService.php', true],
    'App\\Form\\Type\\LanguageType' => ['privates', 'App\\Form\\Type\\LanguageType', 'getLanguageTypeService.php', true],
    'App\\Form\\Type\\MetaFieldsCollectionType' => ['privates', 'App\\Form\\Type\\MetaFieldsCollectionType', 'getMetaFieldsCollectionTypeService.php', true],
    'App\\Form\\Type\\PageSizeType' => ['privates', 'App\\Form\\Type\\PageSizeType', 'getPageSizeTypeService.php', true],
    'App\\Form\\Type\\ProjectType' => ['privates', 'App\\Form\\Type\\ProjectType', 'getProjectTypeService.php', true],
    'App\\Form\\Type\\SkinType' => ['privates', 'App\\Form\\Type\\SkinType', 'getSkinTypeService.php', true],
    'App\\Form\\Type\\SystemConfigurationType' => ['privates', 'App\\Form\\Type\\SystemConfigurationType', 'getSystemConfigurationTypeService.php', true],
    'App\\Form\\Type\\TagsInputType' => ['privates', 'App\\Form\\Type\\TagsInputType', 'getTagsInputTypeService.php', true],
    'App\\Form\\Type\\TrackingModeType' => ['privates', 'App\\Form\\Type\\TrackingModeType', 'getTrackingModeTypeService.php', true],
    'App\\Form\\Type\\UserPreferenceType' => ['privates', 'App\\Form\\Type\\UserPreferenceType', 'getUserPreferenceTypeService.php', true],
    'App\\Form\\Type\\UserRoleType' => ['privates', 'App\\Form\\Type\\UserRoleType', 'getUserRoleTypeService.php', true],
    'App\\Form\\Type\\UserType' => ['privates', 'App\\Form\\Type\\UserType', 'getUserTypeService.php', true],
    'App\\Form\\Type\\VisibilityType' => ['privates', 'App\\Form\\Type\\VisibilityType', 'getVisibilityTypeService.php', true],
    'App\\Form\\Type\\YesNoType' => ['privates', 'App\\Form\\Type\\YesNoType', 'getYesNoTypeService.php', true],
    'App\\Form\\UserApiTokenType' => ['privates', 'App\\Form\\UserApiTokenType', 'getUserApiTokenTypeService.php', true],
    'App\\Form\\UserCreateType' => ['privates', 'App\\Form\\UserCreateType', 'getUserCreateTypeService.php', true],
    'App\\Form\\UserEditType' => ['privates', 'App\\Form\\UserEditType', 'getUserEditTypeService.php', true],
    'App\\Form\\UserPasswordType' => ['privates', 'App\\Form\\UserPasswordType', 'getUserPasswordTypeService.php', true],
    'App\\Form\\UserPreferencesForm' => ['privates', 'App\\Form\\UserPreferencesForm', 'getUserPreferencesFormService.php', true],
    'App\\Form\\UserRolesType' => ['privates', 'App\\Form\\UserRolesType', 'getUserRolesTypeService.php', true],
    'FOS\\UserBundle\\Form\\Type\\ChangePasswordFormType' => ['privates', 'fos_user.change_password.form.type', 'getFosUser_ChangePassword_Form_TypeService.php', true],
    'FOS\\UserBundle\\Form\\Type\\ProfileFormType' => ['privates', 'fos_user.profile.form.type', 'getFosUser_Profile_Form_TypeService.php', true],
    'FOS\\UserBundle\\Form\\Type\\RegistrationFormType' => ['privates', 'fos_user.registration.form.type', 'getFosUser_Registration_Form_TypeService.php', true],
    'FOS\\UserBundle\\Form\\Type\\ResettingFormType' => ['privates', 'fos_user.resetting.form.type', 'getFosUser_Resetting_Form_TypeService.php', true],
    'FOS\\UserBundle\\Form\\Type\\UsernameFormType' => ['privates', 'fos_user.username_form_type', 'getFosUser_UsernameFormTypeService.php', true],
    'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService.php', true],
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService.php', true],
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['services', 'form.type.file', 'getForm_Type_FileService.php', true],
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService.php', true],
]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['App\\Form\\Extension\\DocumentationLinkExtension'] ?? ($this->privates['App\\Form\\Extension\\DocumentationLinkExtension'] = new \App\Form\Extension\DocumentationLinkExtension()));
    yield 1 => ($this->privates['form.type_extension.form.transformation_failure_handling'] ?? $this->load('getForm_TypeExtension_Form_TransformationFailureHandlingService.php'));
    yield 2 => ($this->privates['form.type_extension.form.http_foundation'] ?? $this->load('getForm_TypeExtension_Form_HttpFoundationService.php'));
    yield 3 => ($this->privates['form.type_extension.form.validator'] ?? $this->load('getForm_TypeExtension_Form_ValidatorService.php'));
    yield 4 => ($this->privates['form.type_extension.upload.validator'] ?? $this->load('getForm_TypeExtension_Upload_ValidatorService.php'));
    yield 5 => ($this->privates['form.type_extension.csrf'] ?? $this->load('getForm_TypeExtension_CsrfService.php'));
    yield 6 => ($this->privates['nelmio_api_doc.form.documentation_extension'] ?? ($this->privates['nelmio_api_doc.form.documentation_extension'] = new \Nelmio\ApiDocBundle\Form\Extension\DocumentationExtension()));
}, 7), 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['App\\Form\\Extension\\EnhancedChoiceTypeExtension'] ?? $this->load('getEnhancedChoiceTypeExtensionService.php'));
    yield 1 => ($this->privates['App\\Form\\Extension\\SelectWithApiDataExtension'] ?? $this->load('getSelectWithApiDataExtensionService.php'));
}, 2), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['App\\Form\\Extension\\EnhancedChoiceTypeExtension'] ?? $this->load('getEnhancedChoiceTypeExtensionService.php'));
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_extension.repeated.validator'] ?? ($this->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()));
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_extension.submit.validator'] ?? ($this->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()));
}, 1)], new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_guesser.validator'] ?? $this->load('getForm_TypeGuesser_ValidatorService.php'));
    yield 1 => ($this->privates['form.type_guesser.doctrine'] ?? $this->load('getForm_TypeGuesser_DoctrineService.php'));
}, 2))], new \Symfony\Component\Form\ResolvedFormTypeFactory());
