<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App_API_Model_I18n' => 0,
'App_API_Model_Version' => 1,
'App_Entity_Activity' => 2,
'App_Entity_ActivityMeta' => 3,
'App_Entity_Customer' => 4,
'App_Entity_CustomerMeta' => 5,
'App_Entity_Project' => 6,
'App_Entity_ProjectMeta' => 7,
'App_Entity_Timesheet' => 8,
'App_Entity_TimesheetMeta' => 9,
'App_Entity_User' => 10,
'FOS_UserBundle_Model_User' => 11,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\API\\Model\\I18n',
                    'formDateTime',
                    'formDate',
                    'dateTime',
                    'date',
                    'time',
                    'duration',
                    'is24hours',
                ],
                'attributesMetadata' => [
                    [
                        'formDateTime' => $o[1],
                        'formDate' => $o[2],
                        'dateTime' => $o[3],
                        'date' => $o[4],
                        'time' => $o[5],
                        'duration' => $o[6],
                        'is24hours' => $o[7],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\API\\Model\\Version',
                    'version',
                    'candidate',
                    'semver',
                    'name',
                    'copyright',
                ],
                'attributesMetadata' => [
                    [
                        'version' => $o[1],
                        'candidate' => $o[2],
                        'semver' => $o[3],
                        'name' => $o[4],
                        'copyright' => $o[5],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Activity',
                    'id',
                    'project',
                    'name',
                    'comment',
                    'visible',
                    'timesheets',
                    'meta',
                    'fixedRate',
                    'hourlyRate',
                    'color',
                    'budget',
                    'timeBudget',
                    'metaFields',
                    'visibleMetaFields',
                    'metaField',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'project' => $o[2],
                        'name' => $o[3],
                        'comment' => $o[4],
                        'visible' => $o[5],
                        'timesheets' => $o[6],
                        'meta' => $o[7],
                        'fixedRate' => $o[8],
                        'hourlyRate' => $o[9],
                        'color' => $o[10],
                        'budget' => $o[11],
                        'timeBudget' => $o[12],
                        'metaFields' => $o[13],
                        'visibleMetaFields' => $o[14],
                        'metaField' => $o[15],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ActivityMeta',
                    'activity',
                    'id',
                    'name',
                    'value',
                    'visible',
                    'type',
                    'required',
                    'constraints',
                    'entity',
                    'isRequired',
                    'isVisible',
                ],
                'attributesMetadata' => [
                    [
                        'activity' => $o[1],
                        'id' => $o[2],
                        'name' => $o[3],
                        'value' => $o[4],
                        'visible' => $o[5],
                        'type' => $o[6],
                        'required' => $o[7],
                        'constraints' => $o[8],
                        'entity' => $o[9],
                        'isRequired' => $o[10],
                        'isVisible' => $o[11],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Customer',
                    'id',
                    'name',
                    'number',
                    'comment',
                    'projects',
                    'visible',
                    'company',
                    'contact',
                    'address',
                    'country',
                    'currency',
                    'phone',
                    'fax',
                    'mobile',
                    'email',
                    'homepage',
                    'timezone',
                    'meta',
                    'fixedRate',
                    'hourlyRate',
                    'color',
                    'budget',
                    'timeBudget',
                    'metaFields',
                    'visibleMetaFields',
                    'metaField',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'number' => $o[3],
                        'comment' => $o[4],
                        'projects' => $o[5],
                        'visible' => $o[6],
                        'company' => $o[7],
                        'contact' => $o[8],
                        'address' => $o[9],
                        'country' => $o[10],
                        'currency' => $o[11],
                        'phone' => $o[12],
                        'fax' => $o[13],
                        'mobile' => $o[14],
                        'email' => $o[15],
                        'homepage' => $o[16],
                        'timezone' => $o[17],
                        'meta' => $o[18],
                        'fixedRate' => $o[19],
                        'hourlyRate' => $o[20],
                        'color' => $o[21],
                        'budget' => $o[22],
                        'timeBudget' => $o[23],
                        'metaFields' => $o[24],
                        'visibleMetaFields' => $o[25],
                        'metaField' => $o[26],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\CustomerMeta',
                    'customer',
                    'id',
                    'name',
                    'value',
                    'visible',
                    'type',
                    'required',
                    'constraints',
                    'entity',
                    'isRequired',
                    'isVisible',
                ],
                'attributesMetadata' => [
                    [
                        'customer' => $o[1],
                        'id' => $o[2],
                        'name' => $o[3],
                        'value' => $o[4],
                        'visible' => $o[5],
                        'type' => $o[6],
                        'required' => $o[7],
                        'constraints' => $o[8],
                        'entity' => $o[9],
                        'isRequired' => $o[10],
                        'isVisible' => $o[11],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Project',
                    'id',
                    'customer',
                    'name',
                    'orderNumber',
                    'comment',
                    'visible',
                    'activities',
                    'timesheets',
                    'meta',
                    'fixedRate',
                    'hourlyRate',
                    'color',
                    'budget',
                    'timeBudget',
                    'metaFields',
                    'visibleMetaFields',
                    'metaField',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'customer' => $o[2],
                        'name' => $o[3],
                        'orderNumber' => $o[4],
                        'comment' => $o[5],
                        'visible' => $o[6],
                        'activities' => $o[7],
                        'timesheets' => $o[8],
                        'meta' => $o[9],
                        'fixedRate' => $o[10],
                        'hourlyRate' => $o[11],
                        'color' => $o[12],
                        'budget' => $o[13],
                        'timeBudget' => $o[14],
                        'metaFields' => $o[15],
                        'visibleMetaFields' => $o[16],
                        'metaField' => $o[17],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ProjectMeta',
                    'project',
                    'id',
                    'name',
                    'value',
                    'visible',
                    'type',
                    'required',
                    'constraints',
                    'entity',
                    'isRequired',
                    'isVisible',
                ],
                'attributesMetadata' => [
                    [
                        'project' => $o[1],
                        'id' => $o[2],
                        'name' => $o[3],
                        'value' => $o[4],
                        'visible' => $o[5],
                        'type' => $o[6],
                        'required' => $o[7],
                        'constraints' => $o[8],
                        'entity' => $o[9],
                        'isRequired' => $o[10],
                        'isVisible' => $o[11],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Timesheet',
                    'id',
                    'begin',
                    'end',
                    'timezone',
                    'localized',
                    'duration',
                    'user',
                    'activity',
                    'project',
                    'description',
                    'rate',
                    'exported',
                    'tags',
                    'meta',
                    'fixedRate',
                    'hourlyRate',
                    'tagsAsArray',
                    'metaFields',
                    'visibleMetaFields',
                    'metaField',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'begin' => $o[2],
                        'end' => $o[3],
                        'timezone' => $o[4],
                        'localized' => $o[5],
                        'duration' => $o[6],
                        'user' => $o[7],
                        'activity' => $o[8],
                        'project' => $o[9],
                        'description' => $o[10],
                        'rate' => $o[11],
                        'exported' => $o[12],
                        'tags' => $o[13],
                        'meta' => $o[14],
                        'fixedRate' => $o[15],
                        'hourlyRate' => $o[16],
                        'tagsAsArray' => $o[17],
                        'metaFields' => $o[18],
                        'visibleMetaFields' => $o[19],
                        'metaField' => $o[20],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\TimesheetMeta',
                    'timesheet',
                    'id',
                    'name',
                    'value',
                    'visible',
                    'type',
                    'required',
                    'constraints',
                    'entity',
                    'isRequired',
                    'isVisible',
                ],
                'attributesMetadata' => [
                    [
                        'timesheet' => $o[1],
                        'id' => $o[2],
                        'name' => $o[3],
                        'value' => $o[4],
                        'visible' => $o[5],
                        'type' => $o[6],
                        'required' => $o[7],
                        'constraints' => $o[8],
                        'entity' => $o[9],
                        'isRequired' => $o[10],
                        'isVisible' => $o[11],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                    'id',
                    'alias',
                    'registeredAt',
                    'title',
                    'avatar',
                    'apiToken',
                    'plainApiToken',
                    'preferences',
                    'username',
                    'usernameCanonical',
                    'email',
                    'emailCanonical',
                    'enabled',
                    'salt',
                    'password',
                    'plainPassword',
                    'lastLogin',
                    'confirmationToken',
                    'passwordRequestedAt',
                    'groups',
                    'roles',
                    'preferenceValue',
                    'preference',
                    'locale',
                    'role',
                    'accountNonExpired',
                    'accountNonLocked',
                    'credentialsNonExpired',
                    'superAdmin',
                    'passwordRequestNonExpired',
                    'groupNames',
                    'group',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'alias' => $o[2],
                        'registeredAt' => $o[3],
                        'title' => $o[4],
                        'avatar' => $o[5],
                        'apiToken' => $o[6],
                        'plainApiToken' => $o[7],
                        'preferences' => $o[8],
                        'username' => $o[9],
                        'usernameCanonical' => $o[10],
                        'email' => $o[11],
                        'emailCanonical' => $o[12],
                        'enabled' => $o[13],
                        'salt' => $o[14],
                        'password' => $o[15],
                        'plainPassword' => $o[16],
                        'lastLogin' => $o[17],
                        'confirmationToken' => $o[18],
                        'passwordRequestedAt' => $o[19],
                        'groups' => $o[20],
                        'roles' => $o[21],
                        'preferenceValue' => $o[22],
                        'preference' => $o[23],
                        'locale' => $o[24],
                        'role' => $o[25],
                        'accountNonExpired' => $o[26],
                        'accountNonLocked' => $o[27],
                        'credentialsNonExpired' => $o[28],
                        'superAdmin' => $o[29],
                        'passwordRequestNonExpired' => $o[30],
                        'groupNames' => $o[31],
                        'group' => $o[32],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'FOS\\UserBundle\\Model\\User',
                    'id',
                    'username',
                    'usernameCanonical',
                    'email',
                    'emailCanonical',
                    'enabled',
                    'salt',
                    'password',
                    'plainPassword',
                    'lastLogin',
                    'confirmationToken',
                    'passwordRequestedAt',
                    'groups',
                    'roles',
                    'role',
                    'accountNonExpired',
                    'accountNonLocked',
                    'credentialsNonExpired',
                    'superAdmin',
                    'passwordRequestNonExpired',
                    'groupNames',
                    'group',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'username' => $o[2],
                        'usernameCanonical' => $o[3],
                        'email' => $o[4],
                        'emailCanonical' => $o[5],
                        'enabled' => $o[6],
                        'salt' => $o[7],
                        'password' => $o[8],
                        'plainPassword' => $o[9],
                        'lastLogin' => $o[10],
                        'confirmationToken' => $o[11],
                        'passwordRequestedAt' => $o[12],
                        'groups' => $o[13],
                        'roles' => $o[14],
                        'role' => $o[15],
                        'accountNonExpired' => $o[16],
                        'accountNonLocked' => $o[17],
                        'credentialsNonExpired' => $o[18],
                        'superAdmin' => $o[19],
                        'passwordRequestNonExpired' => $o[20],
                        'groupNames' => $o[21],
                        'group' => $o[22],
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
